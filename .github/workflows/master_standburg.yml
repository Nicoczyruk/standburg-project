# .github/workflows/master_standburg.yml
name: Build and deploy Node.js app to Azure Web App - standburg (pre-built client)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy: 
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write 
      contents: read 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x' 

      - name: Install backend (server) dependencies
        working-directory: ./server
        run: |
          npm install --omit=dev # Instala solo dependencias de producción de server/package.json

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E0EF2F2993FC4B45B29E6F3E12D4BA13 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0639668D7EE049C6A85B6C1330FD57EC }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8DE7A1BB7DF7401998A51BB1C2769DF5 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'standburg' # Nombre de tu Azure Web App
          slot-name: 'Production' # O el slot de despliegue que uses
          package: . # Despliega todo el contenido del repositorio checkout
                     # Azure App Service usará el "Comando de Inicio" para arrancar la app